(()=>{"use strict";var n={705:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);r&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},476:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([o]).join("\n")}return[e].join("\n")}},426:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(476),a=t.n(r),o=t(705),i=t.n(o)()(a());i.push([n.id,'\nbody {\n    display: flex;\n    flex-direction: column;\n    margin:  0 ;\n    font-family: \'Segoe UI\', Tahoma, Geneva, Verdana, sans-serif;\n    font-size: 16px;\n    height: 100vh;\n}\nheader {\n    font-size: 2rem;\n    height: auto;\n    padding: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\nmain {\n    flex-grow: 1;\n    display: flex;\n    gap: 40px;\n    justify-content: center;\n    align-items: center;\n}\n.player, .opponent {\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n}\n.gameboard {\n    height: 300px;\n    width: 300px;\n    display: grid;\n    grid-template-columns: repeat(10, 1fr);\n}\n.tile {\n    border: 1px solid black;  \n}\n.tile.hovered {\n    background: linear-gradient( rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3) ); \n}\n.tile.hovered:hover {\n    cursor: pointer;\n}\n.tile.selected, .tile.selected.hovered {\n    background: linear-gradient( rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6) );\n    cursor: auto;\n}\n.shot {\n    background-color: aqua;\n}\n.tile.hasShip.shot {\n    background: 0;\n    background-color: red;\n}\n.computerTile:hover {\n    cursor: pointer;\n}\n.winnerDiv {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 30px;\n}\n\n\n.winnerDiv > button {\n  appearance: none;\n  background-color: #FAFBFC;\n  border: 1px solid rgba(27, 31, 35, 0.15);\n  border-radius: 6px;\n  box-shadow: rgba(27, 31, 35, 0.04) 0 1px 0, rgba(255, 255, 255, 0.25) 0 1px 0 inset;\n  box-sizing: border-box;\n  color: #24292E;\n  cursor: pointer;\n  display: inline-block;\n  font-family: -apple-system, system-ui, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji";\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 20px;\n  list-style: none;\n  padding: 6px 16px;\n  position: relative;\n  transition: background-color 0.2s cubic-bezier(0.3, 0, 0.5, 1);\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  vertical-align: middle;\n  white-space: nowrap;\n  word-wrap: break-word;\n}\n\n.winnerDiv > button:hover {\n  background-color: #F3F4F6;\n  text-decoration: none;\n  transition-duration: 0.1s;\n}\n\n\n.winnerDiv > button:focus {\n  outline: 1px transparent;\n}\n\n\n\nfooter {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 20px;\n}\n@media (width <= 700px) {\n    main {\n        flex-direction: column;\n    }\n    .winnerDiv {\n        text-align: center;\n        margin-left: 20px;\n        margin-right: 20px;\n    }\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:";AACA;IACI,aAAa;IACb,sBAAsB;IACtB,WAAW;IACX,4DAA4D;IAC5D,eAAe;IACf,aAAa;AACjB;AACA;IACI,eAAe;IACf,YAAY;IACZ,aAAa;IACb,aAAa;IACb,mBAAmB;IACnB,uBAAuB;AAC3B;AACA;IACI,YAAY;IACZ,aAAa;IACb,SAAS;IACT,uBAAuB;IACvB,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,kBAAkB;AACtB;AACA;IACI,aAAa;IACb,YAAY;IACZ,aAAa;IACb,sCAAsC;AAC1C;AACA;IACI,uBAAuB;AAC3B;AACA;IACI,qEAAqE;AACzE;AACA;IACI,eAAe;AACnB;AACA;IACI,qEAAqE;IACrE,YAAY;AAChB;AACA;IACI,sBAAsB;AAC1B;AACA;IACI,aAAa;IACb,qBAAqB;AACzB;AACA;IACI,eAAe;AACnB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;IACvB,SAAS;AACb;;;AAGA;EACE,gBAAgB;EAChB,yBAAyB;EACzB,wCAAwC;EACxC,kBAAkB;EAClB,mFAAmF;EACnF,sBAAsB;EACtB,cAAc;EACd,eAAe;EACf,qBAAqB;EACrB,sHAAsH;EACtH,eAAe;EACf,gBAAgB;EAChB,iBAAiB;EACjB,gBAAgB;EAChB,iBAAiB;EACjB,kBAAkB;EAClB,8DAA8D;EAC9D,iBAAiB;EACjB,yBAAyB;EACzB,0BAA0B;EAC1B,sBAAsB;EACtB,mBAAmB;EACnB,qBAAqB;AACvB;;AAEA;EACE,yBAAyB;EACzB,qBAAqB;EACrB,yBAAyB;AAC3B;;;AAGA;EACE,wBAAwB;AAC1B;;;;AAIA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,aAAa;AACjB;AACA;IACI;QACI,sBAAsB;IAC1B;IACA;QACI,kBAAkB;QAClB,iBAAiB;QACjB,kBAAkB;IACtB;AACJ",sourcesContent:['\nbody {\n    display: flex;\n    flex-direction: column;\n    margin:  0 ;\n    font-family: \'Segoe UI\', Tahoma, Geneva, Verdana, sans-serif;\n    font-size: 16px;\n    height: 100vh;\n}\nheader {\n    font-size: 2rem;\n    height: auto;\n    padding: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\nmain {\n    flex-grow: 1;\n    display: flex;\n    gap: 40px;\n    justify-content: center;\n    align-items: center;\n}\n.player, .opponent {\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n}\n.gameboard {\n    height: 300px;\n    width: 300px;\n    display: grid;\n    grid-template-columns: repeat(10, 1fr);\n}\n.tile {\n    border: 1px solid black;  \n}\n.tile.hovered {\n    background: linear-gradient( rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3) ); \n}\n.tile.hovered:hover {\n    cursor: pointer;\n}\n.tile.selected, .tile.selected.hovered {\n    background: linear-gradient( rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6) );\n    cursor: auto;\n}\n.shot {\n    background-color: aqua;\n}\n.tile.hasShip.shot {\n    background: 0;\n    background-color: red;\n}\n.computerTile:hover {\n    cursor: pointer;\n}\n.winnerDiv {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 30px;\n}\n\n\n.winnerDiv > button {\n  appearance: none;\n  background-color: #FAFBFC;\n  border: 1px solid rgba(27, 31, 35, 0.15);\n  border-radius: 6px;\n  box-shadow: rgba(27, 31, 35, 0.04) 0 1px 0, rgba(255, 255, 255, 0.25) 0 1px 0 inset;\n  box-sizing: border-box;\n  color: #24292E;\n  cursor: pointer;\n  display: inline-block;\n  font-family: -apple-system, system-ui, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji";\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 20px;\n  list-style: none;\n  padding: 6px 16px;\n  position: relative;\n  transition: background-color 0.2s cubic-bezier(0.3, 0, 0.5, 1);\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  vertical-align: middle;\n  white-space: nowrap;\n  word-wrap: break-word;\n}\n\n.winnerDiv > button:hover {\n  background-color: #F3F4F6;\n  text-decoration: none;\n  transition-duration: 0.1s;\n}\n\n\n.winnerDiv > button:focus {\n  outline: 1px transparent;\n}\n\n\n\nfooter {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 20px;\n}\n@media (width <= 700px) {\n    main {\n        flex-direction: column;\n    }\n    .winnerDiv {\n        text-align: center;\n        margin-left: 20px;\n        margin-right: 20px;\n    }\n}\n'],sourceRoot:""}]);const s=i},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},i=[],s=0;s<n.length;s++){var c=n[s],A=r.base?c[0]+r.base:c[0],l=o[A]||0,d="".concat(A," ").concat(l);o[A]=l+1;var u=t(d),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var f=a(p,r);r.byIndex=s,e.splice(s,0,{identifier:d,updater:f,references:1})}i.push(d)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var o=r(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var s=t(o[i]);e[s].references--}for(var c=r(n,a),A=0;A<o.length;A++){var l=t(o[A]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}o=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),a=t.n(r),o=t(569),i=t.n(o),s=t(565),c=t.n(s),A=t(216),l=t.n(A),d=t(589),u=t.n(d),p=t(426),f={};f.styleTagTransform=u(),f.setAttributes=c(),f.insert=i().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=l(),e()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;var h=function(){for(var n=[],e=0;e<100;e++)n.push({location:e,hasShip:!1,shipID:null,hasHit:!1});return{placeShip:function(e,t){for(var r=e+t,a=function(n){var e=n,t=0;return{isSunk:function(){return e-t==0},hit:function(){t++}}}(t),o=e;o<r;o++)n[o].hasShip=!0,n[o].shipID=a;return"succes"},recieveAttack:function(e){return n[e].hasHit?"invalid":(n[e].hasHit=!0,1==n[e].hasShip?(n[e].shipID.hit(),"hit"):"missed")},isWinner:function(){for(var e=0;e<100;e++)if(n[e].hasShip&&!n[e].hasHit)return!1;return!0},gameBoardArray:n}},m=function(n,e){return{turn:function(n,e,t,r){n.forEach((function(e){e.addEventListener("click",(function(e){if(!e.target.classList.contains("shot")){e.target.classList.add("shot");var r=n.indexOf(e.target),o=t.gameBoardArray[r];if(o.hasHit=!0,null!=o.shipID&&o.shipID.hit(),t.isWinner())return void v.winnerDisplay("Player");a()}}))}));var a=function(){for(var n=Math.floor(100*Math.random());r.gameBoardArray[n].hasHit;)n=Math.floor(100*Math.random());document.querySelector(".gameBoard1").childNodes[n].classList.add("shot");var e=r.gameBoardArray[n];e.hasHit=!0,null!=e.shipID&&e.shipID.hit(),r.isWinner()&&v.winnerDisplay("Computer")}}}},v={winnerDisplay:function(n){var e=document.querySelector("main");e.innerHTML="";var t=document.createElement("div");t.classList.add("winnerDiv"),e.appendChild(t);var r=document.createElement("h1");r.innerText="".concat(n," has won! Want to play again?"),t.appendChild(r);var a=document.createElement("button");a.innerText="Play Again",t.appendChild(a),a.addEventListener("click",(function(){e.innerHTML="";for(var n=1;n<3;n++)if(1===n){var t=document.createElement("div");t.classList.add("player");var r=document.createElement("h2");r.innerText="Your Board";var a=document.createElement("div");a.classList.add("gameboard","gameBoard".concat(n)),t.appendChild(r),t.appendChild(a),console.log(t),e.appendChild(t)}else{var o=document.createElement("div");o.classList.add("opponent");var i=document.createElement("h2");i.innerText="Opponents Board";var s=document.createElement("div");s.classList.add("gameboard","gameBoard".concat(n)),o.appendChild(i),o.appendChild(s),console.log(o),e.appendChild(o)}g()}))}};function g(){var n=h(),e=h(),t=[],r=[],a=m(),o=(m(),document.querySelector(".gameBoard1")),i=document.querySelector(".gameBoard2");function s(n,e){for(var t=0;t<100;t++){var r=document.createElement("tile");r.classList.add("tile"),n.appendChild(r),e.push(r)}return e}t=s(o,t),r=s(i,r);var c=5,A=!1;!function(){for(var n,t=5,a=!1,o=0;o<5;o++){for(var i=!1;!i;){var s=Math.floor(10*Math.random()),c=Math.floor(Math.random()*(10-(t-1)));i=!0;for(var A=n=parseInt("".concat(s).concat(c));A<n+t;A++)e.gameBoardArray[A].hasShip&&(i=!1)}e.placeShip(n,t);for(var l=n;l<n+t;l++)r[l].classList.add("hasShip");3==t&&0==a?a=!0:t--}}(),function(){function o(e){for(var r=e,a=r+c,o=!1,i=0,s=10,A=0;A<10;A++)i<a&&s>=a&&i<=r&&s>r&&(o=!0),i+=10,s+=10;for(var l=r;l<a;l++)(l>=100||n.gameBoardArray[l].hasShip)&&(o=!1);if(!o)return!1;t.forEach((function(n){n.classList.remove("hovered")}));for(var d=r;d<a;d++)t[d].classList.add("hovered");return!0}t.forEach((function(e){e.addEventListener("mouseover",(function(n){t.forEach((function(n){n.classList.remove("hovered")})),o(t.indexOf(n.target))})),e.addEventListener("click",(function(e){var r=t.indexOf(e.target);if(o(r)){for(var a=r;a<r+c;a++)t[a].classList.add("selected"),t[a].classList.add("hasShip");n.placeShip(r,c),3==c&&0==A?A=!0:c--,c<2&&(t.forEach((function(n){n.replaceWith(n.cloneNode())})),i())}}))}));var i=function(){r.forEach((function(n){n.classList.add("computerTile")})),a.turn(r,t,e,n)}}()}g()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,