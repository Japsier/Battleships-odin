(()=>{"use strict";var n={705:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);t&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),r&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=r):l[2]=r),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},476:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),o="/*# ".concat(a," */"),i=r.sources.map((function(n){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([o]).join("\n")}return[e].join("\n")}},426:(n,e,r)=>{r.d(e,{Z:()=>s});var t=r(476),a=r.n(t),o=r(705),i=r.n(o)()(a());i.push([n.id,'\nbody {\n    display: flex;\n    flex-direction: column;\n    margin:  0 ;\n    font-family: \'Segoe UI\', Tahoma, Geneva, Verdana, sans-serif;\n    font-size: 16px;\n    height: 100vh;\n}\nheader {\n    font-size: 2rem;\n    height: auto;\n    padding: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\nmain {\n    flex-grow: 1;\n    display: flex;\n    gap: 40px;\n    justify-content: center;\n    align-items: center;\n}\n.gameboard {\n    height: 300px;\n    width: 300px;\n    display: grid;\n    grid-template-columns: repeat(10, 1fr);\n}\n.tile {\n    border: 1px solid black;  \n}\n.tile.hovered {\n    background: linear-gradient( rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3) ); \n}\n.tile.hovered:hover {\n    cursor: pointer;\n}\n.tile.selected, .tile.selected.hovered {\n    background: linear-gradient( rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6) );\n    cursor: auto;\n}\n.shot {\n    background-color: aqua;\n}\n.tile.hasShip.shot {\n    background: 0;\n    background-color: red;\n}\n.computerTile:hover {\n    cursor: pointer;\n}\n.winnerDiv {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 30px;\n}\n\n\n.winnerDiv > button {\n  appearance: none;\n  background-color: #FAFBFC;\n  border: 1px solid rgba(27, 31, 35, 0.15);\n  border-radius: 6px;\n  box-shadow: rgba(27, 31, 35, 0.04) 0 1px 0, rgba(255, 255, 255, 0.25) 0 1px 0 inset;\n  box-sizing: border-box;\n  color: #24292E;\n  cursor: pointer;\n  display: inline-block;\n  font-family: -apple-system, system-ui, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji";\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 20px;\n  list-style: none;\n  padding: 6px 16px;\n  position: relative;\n  transition: background-color 0.2s cubic-bezier(0.3, 0, 0.5, 1);\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  vertical-align: middle;\n  white-space: nowrap;\n  word-wrap: break-word;\n}\n\n.winnerDiv > button:hover {\n  background-color: #F3F4F6;\n  text-decoration: none;\n  transition-duration: 0.1s;\n}\n\n\n.winnerDiv > button:focus {\n  outline: 1px transparent;\n}\n\n\n\nfooter {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 20px;\n}\n\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:";AACA;IACI,aAAa;IACb,sBAAsB;IACtB,WAAW;IACX,4DAA4D;IAC5D,eAAe;IACf,aAAa;AACjB;AACA;IACI,eAAe;IACf,YAAY;IACZ,aAAa;IACb,aAAa;IACb,mBAAmB;IACnB,uBAAuB;AAC3B;AACA;IACI,YAAY;IACZ,aAAa;IACb,SAAS;IACT,uBAAuB;IACvB,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,YAAY;IACZ,aAAa;IACb,sCAAsC;AAC1C;AACA;IACI,uBAAuB;AAC3B;AACA;IACI,qEAAqE;AACzE;AACA;IACI,eAAe;AACnB;AACA;IACI,qEAAqE;IACrE,YAAY;AAChB;AACA;IACI,sBAAsB;AAC1B;AACA;IACI,aAAa;IACb,qBAAqB;AACzB;AACA;IACI,eAAe;AACnB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;IACvB,SAAS;AACb;;;AAGA;EACE,gBAAgB;EAChB,yBAAyB;EACzB,wCAAwC;EACxC,kBAAkB;EAClB,mFAAmF;EACnF,sBAAsB;EACtB,cAAc;EACd,eAAe;EACf,qBAAqB;EACrB,sHAAsH;EACtH,eAAe;EACf,gBAAgB;EAChB,iBAAiB;EACjB,gBAAgB;EAChB,iBAAiB;EACjB,kBAAkB;EAClB,8DAA8D;EAC9D,iBAAiB;EACjB,yBAAyB;EACzB,0BAA0B;EAC1B,sBAAsB;EACtB,mBAAmB;EACnB,qBAAqB;AACvB;;AAEA;EACE,yBAAyB;EACzB,qBAAqB;EACrB,yBAAyB;AAC3B;;;AAGA;EACE,wBAAwB;AAC1B;;;;AAIA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,aAAa;AACjB",sourcesContent:['\nbody {\n    display: flex;\n    flex-direction: column;\n    margin:  0 ;\n    font-family: \'Segoe UI\', Tahoma, Geneva, Verdana, sans-serif;\n    font-size: 16px;\n    height: 100vh;\n}\nheader {\n    font-size: 2rem;\n    height: auto;\n    padding: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\nmain {\n    flex-grow: 1;\n    display: flex;\n    gap: 40px;\n    justify-content: center;\n    align-items: center;\n}\n.gameboard {\n    height: 300px;\n    width: 300px;\n    display: grid;\n    grid-template-columns: repeat(10, 1fr);\n}\n.tile {\n    border: 1px solid black;  \n}\n.tile.hovered {\n    background: linear-gradient( rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3) ); \n}\n.tile.hovered:hover {\n    cursor: pointer;\n}\n.tile.selected, .tile.selected.hovered {\n    background: linear-gradient( rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6) );\n    cursor: auto;\n}\n.shot {\n    background-color: aqua;\n}\n.tile.hasShip.shot {\n    background: 0;\n    background-color: red;\n}\n.computerTile:hover {\n    cursor: pointer;\n}\n.winnerDiv {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 30px;\n}\n\n\n.winnerDiv > button {\n  appearance: none;\n  background-color: #FAFBFC;\n  border: 1px solid rgba(27, 31, 35, 0.15);\n  border-radius: 6px;\n  box-shadow: rgba(27, 31, 35, 0.04) 0 1px 0, rgba(255, 255, 255, 0.25) 0 1px 0 inset;\n  box-sizing: border-box;\n  color: #24292E;\n  cursor: pointer;\n  display: inline-block;\n  font-family: -apple-system, system-ui, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji";\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 20px;\n  list-style: none;\n  padding: 6px 16px;\n  position: relative;\n  transition: background-color 0.2s cubic-bezier(0.3, 0, 0.5, 1);\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  vertical-align: middle;\n  white-space: nowrap;\n  word-wrap: break-word;\n}\n\n.winnerDiv > button:hover {\n  background-color: #F3F4F6;\n  text-decoration: none;\n  transition-duration: 0.1s;\n}\n\n\n.winnerDiv > button:focus {\n  outline: 1px transparent;\n}\n\n\n\nfooter {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 20px;\n}\n\n'],sourceRoot:""}]);const s=i},379:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var o={},i=[],s=0;s<n.length;s++){var c=n[s],A=t.base?c[0]+t.base:c[0],l=o[A]||0,d="".concat(A," ").concat(l);o[A]=l+1;var u=r(d),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var f=a(p,t);t.byIndex=s,e.splice(s,0,{identifier:d,updater:f,references:1})}i.push(d)}return i}function a(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,a){var o=t(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var s=r(o[i]);e[s].references--}for(var c=t(n,a),A=0;A<o.length;A++){var l=r(o[A]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}o=c}}},569:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var a=void 0!==r.layer;a&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,a&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var o=r.sourceMap;o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function r(t){var a=e[t];if(void 0!==a)return a.exports;var o=e[t]={id:t,exports:{}};return n[t](o,o.exports,r),o.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),r.nc=void 0,(()=>{var n=r(379),e=r.n(n),t=r(795),a=r.n(t),o=r(569),i=r.n(o),s=r(565),c=r.n(s),A=r(216),l=r.n(A),d=r(589),u=r.n(d),p=r(426),f={};f.styleTagTransform=u(),f.setAttributes=c(),f.insert=i().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=l(),e()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;var h=function(){for(var n=[],e=0;e<100;e++)n.push({location:e,hasShip:!1,shipID:null,hasHit:!1});return{placeShip:function(e,r){for(var t=e+r,a=function(n){var e=n,r=0;return{isSunk:function(){return e-r==0},hit:function(){r++}}}(r),o=e;o<t;o++)n[o].hasShip=!0,n[o].shipID=a;return"succes"},recieveAttack:function(e){return n[e].hasHit?"invalid":(n[e].hasHit=!0,1==n[e].hasShip?(n[e].shipID.hit(),"hit"):"missed")},isWinner:function(){for(var e=0;e<100;e++)if(n[e].hasShip&&!n[e].hasHit)return!1;return!0},gameBoardArray:n}},v=function(n,e){return{turn:function(n,e,r,t){n.forEach((function(e){e.addEventListener("click",(function(e){if(!e.target.classList.contains("shot")){e.target.classList.add("shot");var t=n.indexOf(e.target),o=r.gameBoardArray[t];if(o.hasHit=!0,null!=o.shipID&&o.shipID.hit(),r.isWinner())return void m.winnerDisplay("Player");a()}}))}));var a=function(){for(var n=Math.floor(100*Math.random());t.gameBoardArray[n].hasHit;)n=Math.floor(100*Math.random());document.querySelector(".gameBoard1").childNodes[n].classList.add("shot");var e=t.gameBoardArray[n];e.hasHit=!0,null!=e.shipID&&e.shipID.hit(),t.isWinner()&&m.winnerDisplay("Computer")}}}},m={winnerDisplay:function(n){var e=document.querySelector("main");e.innerHTML="";var r=document.createElement("div");r.classList.add("winnerDiv"),e.appendChild(r);var t=document.createElement("h1");t.innerText="".concat(n," has won! Want to play again?"),r.appendChild(t);var a=document.createElement("button");a.innerText="Play Again",r.appendChild(a),a.addEventListener("click",(function(){e.innerHTML="";for(var n=1;n<3;n++){var r=document.createElement("div");r.classList.add("gameboard","gameBoard".concat(n)),e.appendChild(r)}g()}))}};function g(){var n=h(),e=h(),r=[],t=[],a=v(),o=(v(),document.querySelector(".gameBoard1")),i=document.querySelector(".gameBoard2");function s(n,e){for(var r=0;r<100;r++){var t=document.createElement("tile");t.classList.add("tile"),n.appendChild(t),e.push(t)}return e}r=s(o,r),t=s(i,t);var c=5,A=!1;!function(){for(var n,r=5,a=!1,o=0;o<5;o++){for(var i=!1;!i;){var s=Math.floor(10*Math.random()),c=Math.floor(Math.random()*(10-(r-1)));i=!0;for(var A=n=parseInt("".concat(s).concat(c));A<n+r;A++)e.gameBoardArray[A].hasShip&&(i=!1)}e.placeShip(n,r);for(var l=n;l<n+r;l++)t[l].classList.add("hasShip");3==r&&0==a?a=!0:r--}}(),function(){function o(e){for(var t=e,a=t+c,o=!1,i=0,s=10,A=0;A<10;A++)i<a&&s>=a&&i<=t&&s>t&&(o=!0),i+=10,s+=10;for(var l=t;l<a;l++)(l>=100||n.gameBoardArray[l].hasShip)&&(o=!1);if(!o)return!1;r.forEach((function(n){n.classList.remove("hovered")}));for(var d=t;d<a;d++)r[d].classList.add("hovered");return!0}r.forEach((function(e){e.addEventListener("mouseover",(function(n){r.forEach((function(n){n.classList.remove("hovered")})),o(r.indexOf(n.target))})),e.addEventListener("click",(function(e){var t=r.indexOf(e.target);if(o(t)){for(var a=t;a<t+c;a++)r[a].classList.add("selected"),r[a].classList.add("hasShip");n.placeShip(t,c),3==c&&0==A?A=!0:c--,c<2&&(r.forEach((function(n){n.replaceWith(n.cloneNode())})),i())}}))}));var i=function(){t.forEach((function(n){n.classList.add("computerTile")})),a.turn(t,r,e,n)}}()}g()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,